<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
  </head>
  <body>
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>
    <h1>SSE Demo</h1>
    <button onclick="connectSSE()">建立 SSE 连接</button>
    <button onclick="closeSSE()">断开 SSE 连接</button>
    <button onclick="connectWS()">建立 WS 连接</button>
    <br />
    <br />
    <div id="message"></div>

    <script>
      // import WebSocket from "ws";
      console.log("eventSource");
      const messageElement = document.getElementById("message");

      let eventSource;

      // 建立 SSE 连接
      const connectSSE = () => {
        eventSource = new EventSource("http://127.0.0.1:3100/sse?content=xxx");

        // 监听消息事件
        eventSource.addEventListener("customEvent", (event) => {
          const data = JSON.parse(event.data);
          messageElement.innerHTML +=
            `${data.id} --- ${data.time} --- params参数：${JSON.stringify(
              data.params
            )}` + "<br />";
        });

        eventSource.onopen = () => {
          messageElement.innerHTML += `SSE 连接成功，状态${eventSource.readyState}<br />`;
        };

        eventSource.onerror = () => {
          messageElement.innerHTML += `SSE 连接错误，状态${eventSource.readyState}<br />`;
        };
      };

      // 断开 SSE 连接
      const closeSSE = () => {
        eventSource.close();
        messageElement.innerHTML += `SSE 连接关闭，状态${eventSource.readyState}<br />`;
      };
      function connectWS() {
        // WebSocket
        const socket = new WebSocket("ws://localhost:8080");
        console.log("socket", socket);
        // 当连接成功打开时
        socket.addEventListener("open", (event) => {
          console.log("Connected to server!");
        });

        // 接收服务器推送的消息
        socket.addEventListener("message", (event) => {
          const data = JSON.parse(event.data);
          console.log(`Received: ${data.time}`);
          // 在这里处理接收到的数据并更新页面内容
        });

        // 当连接关闭时
        socket.addEventListener("close", (event) => {
          console.log("Disconnected from server");
        });
      }
    </script>
  </body>
</html>
